{"mappings":"IAYAA,EAZkB,CACdC,QAAS,mCACTC,SAAU,gCACVC,kBAAmB,sBACnBC,iBAAkB,qBAClBC,cAAe,eACfC,eAAgB,SAChBC,kBAAmB,kCACnBC,kBAAmB,kCACnBC,cAAe,oBCNnB,MAAMR,QAAES,EAAOR,SAAES,EAAQN,cAAEO,GAAkBZ,EAEtCa,eAAeC,EAAQC,EAAOC,EAAO,EAAGC,GAC3C,MAAMC,EAAM,IAAIC,IAAIR,EAAWC,GAC/BM,EAAIE,aAAaC,IAAI,UAAWX,GAChCQ,EAAIE,aAAaC,IAAI,OAAQL,GAC7BE,EAAIE,aAAaC,IAAI,QAASN,GAC9BG,EAAIE,aAAaC,IAAI,WAAYJ,GACjCC,EAAIE,aAAaC,IAAI,UAAWC,QAEhC,IACI,MAAMC,QAAiBC,MAAMN,GAC7B,IAAKK,EAASE,GAAI,CACd,MAAMC,QAAiBH,EAASI,OAChC,MAAM,IAAIC,MAAMF,EAASG,e,CAE7B,MACMC,QADaP,EAASI,OAE5B,GAAIG,EAAWC,QAAQC,OACnB,OAAOF,EAEP,MAAM,IAAIF,MAAM,iC,CAEtB,MAAOK,GAEL,MADAC,QAAQD,MAAMA,GACRA,C,GC1BdpB,iBACI,MAAMsB,QAAkBrB,IACxB,IAAIsB,EAAc,EAGlB,SAASC,EAAYC,EAASC,EAAYvB,GACxC,MAAMwB,EAAUC,SAASC,cAAc,UACvCF,EAAQG,UAAY,GAGpB,MAAMC,EAAQL,IAFdvB,EAGM6B,EAAMD,EAAQL,EACED,EAAQQ,MAAMF,EAAOC,GAE7BE,SAASC,IACrB,MAAMC,EAASR,SAASS,cAAc,OACtCD,EAAOE,UAAUC,IAAI,QACrBH,EAAOI,UAAY,GAAGL,EAAGM,QACzBd,EAAQe,YAAYN,EAAO,G,CAiB/B,SAASO,EAAqBxC,GAC5B,MAAMyC,EAAOhB,SAASS,cAAc,MAgBpC,OAfAO,EAAKN,UAAUC,IAAI,oBACnBK,EAAKJ,UAAYrC,EAEboB,GAAepB,GAAMyC,EAAKN,UAAUC,IAAI,4BAE5CK,EAAKC,iBAAiB,SAAS,KAC7BtB,EAAcpB,EACdqB,EAAYF,EAzCL,EAyCsBC,GAETK,SAASC,cAAc,+BAC7BS,UAAUQ,OAAO,4BAE/BF,EAAKN,UAAUC,IAAI,2BAA2B,IAGzCK,C,CAGTpB,EAAYF,EApDD,EAoDkBC,GAjC7B,SAA2BE,EAASC,GAClC,MAAMqB,EAAenB,SAASC,cAAc,eACtCmB,EAAaC,KAAKC,KAAKzB,EAAQN,OAASO,GACxCyB,EAAOvB,SAASS,cAAc,MACpCc,EAAKb,UAAUC,IAAI,oBAEnB,IAAK,IAAIa,EAAI,EAAGA,EAAIJ,EAAYI,IAAK,CACnC,MAAMR,EAAOD,EAAqBS,EAAI,GACtCD,EAAKT,YAAYE,E,CAEnBG,EAAaL,YAAYS,E,CAwB3BE,CAAkB/B,EArDP,E,CAwDbgC","sources":["src/js/constants/api-config.js","src/js/api/getFilm.js","src/js/pagination.js"],"sourcesContent":["const apiConfig = {\n    API_KEY: 'ddec42efa7dad57904cab0b807fa902e',\n    BASE_URL: 'https://api.themoviedb.org/3/',\n    TREND_PARAMS_WEEK: 'trending/movie/week',\n    TREND_PARAMS_DAY: 'trending/movie/day',\n    SEARCH_PARAMS: 'search/movie',\n    DETAILS_PARAMS: 'movie/',\n    IMAGE_BASE_URL_1X: 'https://image.tmdb.org/t/p/w500',\n    IMAGE_BASE_URL_2X: 'https://image.tmdb.org/t/p/w780',\n    GENRES_PARAMS: 'genre/movie/list',\n};\n\nexport default apiConfig;","import apiConfig from '../constants/api-config';\n\n\nconst { API_KEY, BASE_URL, SEARCH_PARAMS } = apiConfig;\n\nexport async function getFilm(query, page = 1, lang) {\n    const url = new URL(BASE_URL + SEARCH_PARAMS);\n    url.searchParams.set('api_key', API_KEY);\n    url.searchParams.set('page', page);\n    url.searchParams.set('query', query);\n    url.searchParams.set('language', lang);\n    url.searchParams.set('sort_by', sortBy);\n\n    try {\n        const response = await fetch(url);\n        if (!response.ok) {\n            const respJson = await response.json();\n            throw new Error(respJson.status_message);\n        }\n        const data = await response.json();\n        const collection = data;\n        if (collection.results.length) {\n            return collection;\n        } else {\n            throw new Error('Nothing is found. Wrong query.');\n        }\n    } catch (error) {\n        console.error(error);\n        throw error;\n    }\n}\n\n","import { getFilm } from './api/getFilm';\n\nasync function main() {\n    const postsData = await getFilm();\n    let currentPage = 1;\n    let rows = 7;\n  \n    function displayList(arrData, rowPerPage, page) {\n      const postsEl = document.querySelector('.posts');\n      postsEl.innerHTML = \"\";\n      page--;\n  \n      const start = rowPerPage * page;\n      const end = start + rowPerPage;\n      const paginatedData = arrData.slice(start, end);\n  \n      paginatedData.forEach((el) => {\n        const postEl = document.createElement(\"div\");\n        postEl.classList.add(\"post\");\n        postEl.innerText = `${el.title}`;\n        postsEl.appendChild(postEl);\n      })\n    }\n  \n    function displayPagination(arrData, rowPerPage) {\n      const paginationEl = document.querySelector('.pagination');\n      const pagesCount = Math.ceil(arrData.length / rowPerPage);\n      const ulEl = document.createElement(\"ul\");\n      ulEl.classList.add('pagination__list');\n  \n      for (let i = 0; i < pagesCount; i++) {\n        const liEl = displayPaginationBtn(i + 1);\n        ulEl.appendChild(liEl)\n      }\n      paginationEl.appendChild(ulEl)\n    }\n  \n    function displayPaginationBtn(page) {\n      const liEl = document.createElement(\"li\");\n      liEl.classList.add('pagination__item')\n      liEl.innerText = page\n  \n      if (currentPage == page) liEl.classList.add('pagination__item--active');\n  \n      liEl.addEventListener('click', () => {\n        currentPage = page\n        displayList(postsData, rows, currentPage)\n  \n        let currentItemLi = document.querySelector('li.pagination__item--active');\n        currentItemLi.classList.remove('pagination__item--active');\n  \n        liEl.classList.add('pagination__item--active');\n      })\n  \n      return liEl;\n    }\n  \n    displayList(postsData, rows, currentPage);\n    displayPagination(postsData, rows);\n  }\n  \n  main();"],"names":["$a8342a470c9e741d$export$2e2bcd8739ae039","API_KEY","BASE_URL","TREND_PARAMS_WEEK","TREND_PARAMS_DAY","SEARCH_PARAMS","DETAILS_PARAMS","IMAGE_BASE_URL_1X","IMAGE_BASE_URL_2X","GENRES_PARAMS","$e17855f2cb6301b9$var$API_KEY","$e17855f2cb6301b9$var$BASE_URL","$e17855f2cb6301b9$var$SEARCH_PARAMS","async","$e17855f2cb6301b9$export$fc25d4d727cdfc1e","query","page","lang","url","URL","searchParams","set","sortBy","response","fetch","ok","respJson","json","Error","status_message","collection","results","length","error","console","postsData","currentPage","displayList","arrData","rowPerPage","postsEl","document","querySelector","innerHTML","start","end","slice","forEach","el","postEl","createElement","classList","add","innerText","title","appendChild","displayPaginationBtn","liEl","addEventListener","remove","paginationEl","pagesCount","Math","ceil","ulEl","i","displayPagination","$1bab9c519cfa82bc$var$main"],"version":3,"file":"index.a07c2b65.js.map"}